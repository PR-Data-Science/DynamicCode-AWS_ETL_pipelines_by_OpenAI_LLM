import pandas as pd
import numpy as np

def clean_youtube_data(df):
    # Remove leading/trailing whitespace from string columns
    string_columns = ['video_id', 'trending_date', 'title', 'channel_title', 'tags', 'thumbnail_link', 'description']
    df[string_columns] = df[string_columns].apply(lambda x: x.str.strip())
    
    # Standardize publish_time to datetime format (ISO 8601)
    df['publish_time'] = pd.to_datetime(df['publish_time'], errors='coerce').dt.strftime('%Y-%m-%dT%H:%M:%S.%fZ')
    
    # Validate numeric columns ensuring they are non-negative
    numeric_columns = ['views', 'likes', 'dislikes', 'comment_count']
    df[numeric_columns] = df[numeric_columns].clip(lower=0)
    
    # Handle missing values: fill 'No Tags' for missing tags
    df['tags'] = df['tags'].replace('', 'No Tags')
    
    # Normalize tags column by removing special characters (keeping only alphanumeric and spaces)
    df['tags'] = df['tags'].str.replace(r'[^a-zA-Z0-9 ]', '', regex=True)
    
    # Drop duplicates
    df.drop_duplicates(inplace=True)
    
    # Handle missing values in the description column by filling with an empty string
    df['description'].fillna('', inplace=True)
    
    # If any column is redundant or not needed for analysis, drop here (example: comments_disabled, ratings_disabled, video_error_or_removed)
    df.drop(columns=['comments_disabled', 'ratings_disabled', 'video_error_or_removed'], inplace=True)
    
    # Reset index
    df.reset_index(drop=True, inplace=True)
    
    return df